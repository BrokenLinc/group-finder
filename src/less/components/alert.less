// Alerts
//
// Define alert colors, border radius, and padding.

@alert-padding-y:                   .75rem;
@alert-padding-x:                   1.25rem;
@alert-margin-bottom:               1rem;
@alert-border-radius:               @border-radius;
@alert-link-font-weight:            @font-weight-bold;
@alert-border-width:                @border-width;

@alert-bg-level:                    10;
@alert-border-level:                9;
@alert-color-level:                 6;

@alert-bg-shader:                   white;
@alert-border-shader:               white;
@alert-color-shader:                black;


//
// Base styles
//

.alert {
  position: relative;
  padding: @alert-padding-y @alert-padding-x;
  margin-bottom: @alert-margin-bottom;
  border: @alert-border-width solid transparent;
  border-radius: @alert-border-radius;

  .alert-color-infix(@gray);
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing @headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: @alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: (@close-font-size + @alert-padding-x * 2);

  // Adjust close link position
  .close {
    position: absolute;
    top: 0;
    right: 0;
    padding: @alert-padding-y @alert-padding-x;
    color: inherit;
  }
}


// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

.alert-state(green);
.alert-state(yellow);
.alert-state(red);

//
// Mixins
//

.alert-variant(@background, @border, @color) {
  color: @color;
  background: @background;
  border-color: @border;

  hr {
    border-top-color: darken(@border, 5%);
  }

  .alert-link {
    color: darken(@color, 10%);
  }
}

.alert-color-infix(@color, @infix: ~'') {
  &@{infix} {
    .alert-variant(
      mix(@alert-bg-shader,     @color, @theme-color-interval * @alert-bg-level),
      mix(@alert-border-shader, @color, @theme-color-interval * @alert-border-level),
      mix(@alert-color-shader,  @color, @theme-color-interval * @alert-color-level),
    );
  }
}

.alert-state(@state) {
  @infix: ~'.is-@{state}';
  @color: @@state;

  .alert {
    .alert-color-infix(@color, @infix);
  }
}
